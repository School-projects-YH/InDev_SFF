// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFF.Datasource.Context;

namespace SFF.Datasource.Migrations
{
    [DbContext(typeof(SFFContext))]
    [Migration("20200421172148_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SFF.Datasource.Model.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MoviePropertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MoviePropertyId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("SFF.Datasource.Model.MovieProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRented")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfCurrentlyRented")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfMaxSimultaneouslyRented")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("SFF.Datasource.Model.MovieStudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovieStudios");
                });

            modelBuilder.Entity("SFF.Datasource.Model.MovieTrivia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<int?>("MovieStudioId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewScore")
                        .HasColumnType("int");

                    b.Property<string>("ReviewSummary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("MovieStudioId");

                    b.ToTable("MovieTrivias");
                });

            modelBuilder.Entity("SFF.Datasource.Model.Movie", b =>
                {
                    b.HasOne("SFF.Datasource.Model.MovieProperty", "MovieProperty")
                        .WithMany()
                        .HasForeignKey("MoviePropertyId");
                });

            modelBuilder.Entity("SFF.Datasource.Model.MovieTrivia", b =>
                {
                    b.HasOne("SFF.Datasource.Model.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");

                    b.HasOne("SFF.Datasource.Model.MovieStudio", "MovieStudio")
                        .WithMany()
                        .HasForeignKey("MovieStudioId");
                });
#pragma warning restore 612, 618
        }
    }
}
